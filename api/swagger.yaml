openapi: 3.0.3
info:
  title: WG-VPM API
  description: |-
    This API registers and provides user connection infomation.
  termsOfService: http://swagger.io/terms/
  contact:
    email: yushin-sato@kalytero.ne.jp
  license:
    name: BSD-4
    url: https://github.com/kalytero/LICENSE-BSD4
  version: 0.0.1
servers:
  - url: https://localhost/api/v0.0.1
tags:
  - name: user
    description: user
paths:
  /signup:
    post:
      tags: [user]
      summary: Sign up
      description: |-
        Give breaer token
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: bearer token
                    pattern: ^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$
                    maxLength: 1024
                additionalProperties: false
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        406:
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /user:
    get:
      tags: [user]
      summary: Get current user
      description: |-
        Get current user.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    description: user
  /user/connection:
    get:
      tags: [user]
      summary: Fetch configuration
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    type: string
                    description: configuration
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        403:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        404:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        406:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        429:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      tags: [user]
      summary: Register [IP:Port] and Fetch filtered configuration
      description: Register [IP:Port] and Fetch filtered (ignored me) configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                ipv4:
                  type: string
                  pattern: |-
                    ^(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.
                    (?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.
                    (?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.
                    (?:25[0-5]|2[0-4]\d|[01]?\d?\d)$
                  maxLength: 15
                port:
                  type: integer
                  minimum: 1
                  maximum: 65535
                  format: int32
                nat_type:
                  type: string
                  enum:
                    [
                      "full-cone",
                      "restricted-cone",
                      "port-restricted-cone",
                      "symmetric",
                    ]
              required: [ipv4, port, nat_type]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  config:
                    type: string
                    pattern: ^([a-zA-Z0-9_]+)=(.+)(\n[a-zA-Z0-9_]+=(.+))*$
                    maxLength: 102400
                    description: configuration
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        403:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        404:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        406:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        429:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Credentials
  schemas:
    error:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: error message
          pattern: ^[a-zA-Z0-9\s.,!?-]*$
          maxLength: 1024
